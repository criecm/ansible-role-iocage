---
- name: get state
  set_fact:
    ioc_installed: '{% if "iocage" in ansible_facts.ansible_local and not do_sysadm | default(False) %}True{% else %}False{% endif %}'
  tags: iocage,vars

- name: iocage pkg
  pkgng:
    name: py36-iocage
    state: present
  tags: iocage,hostinit,pkg
  when: not ioc_installed

- name: mount fdescfs
  mount:
    fstype: fdescfs
    path: /dev/fd
    src: fdesc
    state: mounted
  tags: iocage,hostinit
  when: not ioc_installed

- command: zfs list -H -o name /iocage
  register: zfs_list_iocage
  failed_when: False
  changed_when: False
  tags: iocage,hostinit
  check_mode: False
  
- name: mark zpool for iocage
  command: '/usr/local/bin/iocage activate {{ iocage_zpool }}'
  when: zfs_list_iocage.stdout_lines | length == 0 and not ioc_installed
  tags: iocage, hostinit

- name: get last release
  shell: "uname -r | sed 's/-p[0-9]*//'"
  register: releasecmd
  changed_when: False
  check_mode: False
  tags: iocage, hostinit
  when: not ioc_installed and not iocage_release

- name: set release fact
  set_fact:
    iocage_release: '{{ releasecmd.stdout }}'
  when: not iocage_release

- name: get release state
  stat:
    path: '/iocage/releases/{{ iocage_release }}/root/bin/freebsd-version'
  register: relfile
  tags: iocage, hostinit
  when: not ioc_installed

- name: initialize iocage
  iocage:
    state: fetched
    args: '{{ iocage_fetch_args }}'
    release: '{{ iocage_release }}'
    components: '{{ iocage_components | default(omit) }}'
  register: ioc_fetch
  tags: iocage, hostinit
  when: not ioc_installed and not relfile.stat.exists

- name: Enable iocage service
  service:
    name: iocage
    enabled: True
  tags: iocage, hostinit
  when: not ioc_installed

- name: load accf_http and accf_data
  lineinfile:
    dest: /boot/loader.conf
    line: '{{ item }}'
  with_items:
    - 'accf_http_load="YES"'
    - 'accf_data_load="YES"'
  tags: iocage, hostinit
  when: not ioc_installed
- name: enable racct/rctl
  lineinfile:
    dest: /boot/loader.conf
    line: 'kern.racct.enable=1'
  tags: iocage, hostinit
  when: not ioc_installed

#- name: get iocage current jails
#  shell: "/usr/local/sbin/iocage list |grep '^[0-9]' | awk '{print $5}'"
#  register: iocage_jails
#  failed_when: False
#  changed_when: False
#  tags: iocage, newjails

# creer un/des jails
- name: pkglist.json
  copy:
    src: pkglist.json
    dest: /iocage/pkglist.json
  tags: iocage, newjails
  when: not ioc_installed

#- name: create basejail
#  iocage:
#    name: "basejail"
#    release: '{{ releasecmd.stdout }}'
#    state: basejail
#  tags: iocage, hostinit
#  when: 'jail_list | count() > 0'

- file:
    path: '{{ etcprefix }}/etc/ansible/facts.d'
    state: directory
- file:
    path: '{{ etcprefix }}/etc/ansible-{{ item }}'
    src: '{{ etcprefix }}/etc/ansible'
    state: link
  with_items:
    - 27
    - 36
  when: not ioc_installed

- name: local fact
  copy:
    dest: '{{ etcprefix }}/etc/ansible/facts.d/iocage.fact'
    src: iocage_local.fact
    mode: '0755'
  when: not ioc_installed

- include_tasks: jail.yml
  with_items: '{{ jail_list }}'
  loop_control:
    loop_var: onejail
  tags: iocage, jails
  when: (myjail == "" and jail_list | count() > 0) or (myjail == onejail.name)

